import { pickRandom } from "src/utils";
import { GroupOnlyRule } from "../rules";
import { ZapCommand } from "./command";

const sentences = [
  `O/A @randomMember, com TOTAL certeza.`,
  `Talvez o/a @randomMember, mas pode ser que n√£o`,
  `Sem sombra de d√∫vidas, o/a @randomMember`,
  `Essa a√≠ t√° √ìBVIO, √© o/a @randomMember`,
  `KKKKKKKK ESSA A√ç O/A @randomMember J√Å ME CONFIRMOU NO OFF ü§≠`,
];
export class WhichCommand extends ZapCommand {
    
    public getPatterns(){
        return ['qual', 'qual-membro', 'which-member', 'which'];
    }

    protected getRules(){
        return [ 
            new GroupOnlyRule().override('S√≥ pode ser usado em grupo.'), 
        ];
    }

    protected async runSpecificLogic() {
      const members = await this.context.getAllGroupMembersMentions();
      const randomMember = pickRandom( members );
      return await this.context.reply( pickRandom( sentences ).replace( '@randomMember', randomMember ) );
    }
}